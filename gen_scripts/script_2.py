# This program was generated by "Generative Art Synthesizer" 
# Generation date: 2024-05-22 08:27:53 UTC 
# GAS change date: 2024-05-22 08:27:09 UTC 
# GAS md5 hash: af6cf9188108f420e878048291877a32 
# Python version: 3.10.13 (main, May 22 2024, 00:46:52) [Clang 15.0.0 (clang-1500.1.0.2.5)] 
# For more information visit: https://github.com/volotat/GAS 

#import python libraries 
import os #OS version: default 
import numpy as np #Numpy version: 1.24.3 
from PIL import Image #PIL version: 10.3.0 

#set initial params 
SIZE = 384 
GRID_CHANNELS = 16 

#define utility methods 
def test_values(arr): 
    if np.isnan(arr).any(): 
        raise Exception('Array has None elements!')  
    
    if np.amin(arr) < -1 or np.amax(arr) > 1: 
        raise Exception('Values went to far! [ %.2f : %.2f ]'%(np.amin(arr), np.amax(arr)) )  
    
    return arr 

#define grid transformation methods
def transit(x, t_indx, s_indx, alphas):
    res = x.copy()
    res[:,:,t_indx] = np.sum(x[:,:,s_indx] * alphas, axis = -1)
    return test_values(res.clip(-1,1)) 


def sin(x, t_indx, s_indx, scale = 1, shift = 0): 
    res = x.copy()
    res[:,:,t_indx] = np.sin(x[:,:,s_indx] * 0.5 * np.pi * scale + shift)
    return test_values(res)     


def magnitude(x, t_indx, s_indx, ord = 2): 
    res = x.copy()
    res[:,:,t_indx] = np.linalg.norm(x[:,:,s_indx], axis = -1, ord = ord) / np.power(len(s_indx), 1 / ord) * 2 - 1
    return test_values(res)   


def shift(x, t_indx, s_indx, shift):
    res = x.copy()
    if shift > 0: res[:,:,t_indx] = (-np.abs(((x[:,:,s_indx] + 1) / 2) ** (1 + shift) - 1) ** (1 / (1 + shift)) + 1) * 2 - 1
    if shift < 0: res[:,:,t_indx] = np.abs((1 - (x[:,:,s_indx] + 1) / 2) ** (1 - shift) - 1) ** (1 / (1 - shift)) * 2 - 1  
    return test_values(res) 


def inverse(x, t_indx, s_indx): 
    res = x.copy()
    res[:,:,t_indx] = -x[:,:,s_indx] 
    return test_values(res)   


def smooth_max(x, t_indx, s1_indx, s2_indx, p = 10): 
    res = x.copy()
    res[:,:,t_indx] = np.log((np.exp(x[:,:,s1_indx] * p) + np.exp(x[:,:,s2_indx] * p)) ** (1/p)) / 1.07
    return test_values(res)   


def smooth_min(x, t_indx, s1_indx, s2_indx, p = 10): 
    res = x.copy()
    res[:,:,t_indx] = -np.log((np.exp(-x[:,:,s1_indx] * p) + np.exp(-x[:,:,s2_indx] * p)) ** (1/p)) / 1.07
    return test_values(res)   


def prod(x, t_indx, s_indx):
    res = x.copy()
    res[:,:,t_indx] = np.prod(x[:,:,s_indx], -1)
    return test_values(res) 


def power(x, t_indx, s_indx, p = 1): 
    res = x.copy()
    res[:,:,t_indx] = np.sign(x[:,:,s_indx]) * np.abs(x[:,:,s_indx]) ** p 
    return test_values(res)   


#set initial grid 
grid = np.zeros((SIZE, SIZE, GRID_CHANNELS)) 

x = ((np.arange(SIZE)/(SIZE-1) - 0.5) * 2).reshape((1, SIZE)).repeat(SIZE, 0) 
y = ((np.arange(SIZE)/(SIZE-1) - 0.5) * 2).reshape((SIZE, 1)).repeat(SIZE, 1) 

grid[:,:,0] = (x * -0.36698083103555 + y * -0.025958511539267093) / 2 
grid[:,:,1] = (x * -0.8454799296529218 + y * -0.8689074045465264) / 2 
grid[:,:,2] = (x * 0.912364132563869 + y * 0.0781136237763409) / 2 
grid[:,:,3] = (x * 0.3559405434913765 + y * 0.35343073159624483) / 2 
grid[:,:,4] = (x * 0.519911413967368 + y * -0.3181018704729093) / 2 
grid[:,:,5] = (x * 0.8913868080559986 + y * -0.7966094510456123) / 2 
grid[:,:,6] = (x * -0.04146308591882408 + y * -0.04864827921135961) / 2 
grid[:,:,7] = (x * 0.7270280305537105 + y * 0.25153592229896815) / 2 
grid[:,:,8] = (x * 0.8909265209421668 + y * -0.38384573419415036) / 2 
grid[:,:,9] = (x * -0.5235185263508224 + y * 0.20787651005609953) / 2 
grid[:,:,10] = (x * -0.6371107519299366 + y * 0.03724116601579497) / 2 
grid[:,:,11] = (x * -0.020528116120984485 + y * 0.5622549704831796) / 2 
grid[:,:,12] = (x * -0.5759262033939105 + y * -0.4938816270447839) / 2 
grid[:,:,13] = (x * -0.6239741095594877 + y * 0.7538820420968186) / 2 
grid[:,:,14] = (x * 0.7548581753133607 + y * -0.34242087632596463) / 2 
grid[:,:,15] = (x * 0.17442551190477462 + y * 0.11834177453342098) / 2 

#apply transformations to the grid 
grid = transit(grid, 2, [14, 9, 8, 6, 10, 12, 15, 7, 2], [0.13353349813754095, 0.27811370788971324, 0.010046601306781016, 0.09409381347819039, 0.19396776066186164, 0.06184731924269715, 0.014720596164053384, 0.171600694603072, 0.04207600851609032])
grid = transit(grid, 14, [3], [1.0])
grid = sin(grid, 5, 2, 2.5864937362472893, -27.80837351693623)
grid = transit(grid, 4, [13, 1], [0.10240597296119124, 0.8975940270388086])
grid = power(grid, 13, 5, 0.6113729785979836)
grid = power(grid, 13, 12, 1.5496152460956367)
grid = sin(grid, 8, 14, 3.153175347263114, 83.2302785295476)
grid = magnitude(grid, 14, [11, 4, 8, 15], 3.9502125927525684)
grid = inverse(grid, 7, 6)
grid = sin(grid, 5, 15, 4.781909843883456, 33.22909478516132)
grid = magnitude(grid, 3, [12, 1], 1.0795841614369472)
grid = power(grid, 13, 8, 2.8110226375927048)
grid = smooth_max(grid, 9, 1, 11)
grid = transit(grid, 6, [1, 15, 5, 10], [0.8163936901047503, 0.09817732091353269, 0.04811335871347287, 0.037315630268244214])
grid = smooth_min(grid, 3, 11, 11)
grid = smooth_max(grid, 7, 2, 7)
grid = sin(grid, 1, 12, 0.7253088500234991, -32.849240720333526)
grid = shift(grid, 7, 5, -2.5945740824114356)
grid = transit(grid, 1, [13, 12, 8, 9, 0, 15, 7], [0.009417050229057767, 0.049046028957307926, 0.33301862435463386, 0.15452436489775084, 0.3966673609865545, 0.04978126737671959, 0.00754530319797563])
grid = transit(grid, 11, [10, 11, 0], [0.38520727652007813, 0.15037080462893468, 0.4644219188509872])
grid = transit(grid, 15, [7, 4], [0.6383596441701254, 0.36164035582987475])
grid = sin(grid, 4, 12, 9.911989785687378, 11.241098432199522)
grid = sin(grid, 14, 15, 0.33276555223848364, 47.080126987708894)
grid = transit(grid, 2, [0], [1.0])
grid = sin(grid, 15, 11, 3.4690447580360355, 76.56998271342414)
grid = transit(grid, 14, [8, 12], [0.46465300743828664, 0.5353469925617133])
grid = inverse(grid, 8, 9)
grid = transit(grid, 4, [13, 10, 4, 6, 3, 11, 5, 15, 2, 12], [0.08212420285075747, 0.12457642115231796, 0.05087505748947905, 0.2615583447413974, 0.028016634151067338, 0.03863399010896585, 0.16155697903511654, 0.06163955001565866, 0.17108057005268532, 0.01993825040255438])
grid = sin(grid, 15, 9, 3.2035112016413216, 67.46024967376232)
grid = shift(grid, 3, 0, 1.6338208359987416)
grid = smooth_max(grid, 14, 9, 11)
grid = power(grid, 9, 12, 1.5961036283697687)
grid = inverse(grid, 14, 10)
grid = transit(grid, 10, [13, 6, 11], [0.5129236557719379, 0.014087293339862137, 0.47298905088820004])
grid = shift(grid, 12, 14, 3.278952812251535)
grid = transit(grid, 11, [7, 1, 13, 2], [0.25269313487336176, 0.06746345803507568, 0.2166786859308847, 0.46316472116067775])
grid = transit(grid, 10, [15, 6], [0.8809759450000891, 0.1190240549999109])
grid = transit(grid, 12, [1, 6, 0], [0.33904948515940386, 0.5765040552561732, 0.08444645958442291])
grid = transit(grid, 0, [1, 0, 2], [0.28295538412441035, 0.017374866079234188, 0.6996697497963554])
grid = shift(grid, 10, 5, 4.980183971675101)
grid = shift(grid, 5, 12, 2.9960351477725475)
grid = smooth_max(grid, 3, 10, 8)
grid = sin(grid, 14, 2, 3.3648123980144877, 36.569622480026965)
grid = transit(grid, 6, [11], [1.0])
grid = magnitude(grid, 2, [0, 3, 10, 6, 14, 4, 8], 1.6953387352064069)
grid = sin(grid, 11, 8, 1.933108985437252, 52.45432073554463)
grid = smooth_min(grid, 7, 2, 0)
grid = transit(grid, 15, [12, 2, 8, 13, 9, 7, 14, 11], [0.3158818326938131, 0.026763692931770094, 0.17195071241257043, 0.0328332282210643, 0.006718281237984439, 0.0008743518812553814, 0.3173146892574523, 0.12766321136409003])
grid = inverse(grid, 11, 3)
grid = prod(grid, 0, [11, 14, 3, 13, 4, 12, 2, 9, 5, 7, 6, 8, 1])
grid = transit(grid, 3, [3, 0], [0.7746704616245561, 0.22532953837544398])
grid = transit(grid, 11, [5, 3, 13, 4, 6, 2, 11, 10], [0.024358265413343568, 0.1475504431502684, 0.08551274002796286, 0.32512065432475623, 0.10564094673324996, 0.1474406260227785, 0.035872271046304825, 0.12850405328133566])
grid = magnitude(grid, 2, [11, 2, 3, 5], 1.1293301083575877)
grid = transit(grid, 8, [3, 12, 7], [0.28275625225316614, 0.5588066046936548, 0.158437143053179])
grid = transit(grid, 9, [11, 9, 6, 5, 14], [0.1896680273000221, 0.27244152903343183, 0.03293051054657064, 0.3778486792265561, 0.12711125389341946])
grid = sin(grid, 13, 6, 4.565301156706756, -44.05513528982359)
grid = transit(grid, 2, [4, 1, 13, 2, 5, 10, 0, 15, 9, 14], [0.011255946998214965, 0.024095795277766337, 0.25970445485440297, 0.21781849114750168, 0.087281016893185, 0.20747892289468217, 0.07150564895735026, 0.03323752725826265, 0.05256403227195238, 0.03505816344668173])
grid = transit(grid, 8, [1, 11, 3, 6, 7, 2, 10], [0.06255685543174737, 0.11222014344721383, 0.028572279675670133, 0.301941758717177, 0.31753573460847184, 0.061073655470862874, 0.11609957264885705])
grid = shift(grid, 12, 13, 2.927169303894837)
grid = shift(grid, 1, 10, -4.124329370313872)
grid = power(grid, 9, 4, 2.865361977295059)
grid = inverse(grid, 4, 0)
grid = sin(grid, 4, 14, 1.1728029406392262, 29.658744180723062)
grid = power(grid, 13, 7, 0.7233076665367114)
grid = magnitude(grid, 15, [1, 2, 6], 1.6440836422509573)
grid = prod(grid, 8, [3, 13, 2])
grid = magnitude(grid, 13, [4, 12, 2, 7, 3, 9, 5], 2.2280343857822413)
grid = prod(grid, 8, [9])
grid = transit(grid, 12, [12, 8, 14, 13, 10], [0.08441871713861539, 0.03987017250215756, 0.0812092507438214, 0.5202890908657889, 0.2742127687496167])
grid = smooth_min(grid, 8, 8, 11)
grid = sin(grid, 13, 10, 0.018615461771172483, 48.40870911257363)
grid = magnitude(grid, 8, [4, 1], 2.0529896475295493)
grid = sin(grid, 10, 15, 3.212373419360748, -44.22712217487286)
grid = sin(grid, 14, 6, 2.974443843986175, 67.6057892422885)
grid = shift(grid, 12, 14, 0.8161263869599488)
grid = sin(grid, 10, 13, 1.8803894847663185, -59.85131528075514)
grid = magnitude(grid, 11, [6, 0], 4.445060545243397)
grid = sin(grid, 9, 8, 0.7660081158123713, 52.947902340738636)
grid = magnitude(grid, 6, [9, 8, 14, 5, 10, 3, 0, 12, 15], 1.2966566509644983)
grid = magnitude(grid, 0, [1, 10, 2, 15], 2.4373168704396306)
grid = shift(grid, 11, 0, -2.5369691128231104)
grid = sin(grid, 8, 4, 5.043498484466605, 56.49606612374234)
grid = shift(grid, 5, 4, -5.389948456763761)
grid = magnitude(grid, 6, [7, 13], 1.7926770566575856)
grid = shift(grid, 1, 11, -5.57505960152926)
grid = sin(grid, 6, 9, 4.938936373263827, 74.96689667164043)
grid = shift(grid, 9, 9, -0.9872643635076037)
grid = transit(grid, 3, [14, 12, 15, 6], [0.6560034064338517, 0.2030816821452006, 0.14086078376008435, 5.4127660863382944e-05])
grid = shift(grid, 14, 10, 2.507441193341161)
grid = magnitude(grid, 13, [10, 15], 0.9481711334546217)
grid = magnitude(grid, 15, [13, 5], 1.3500664124387032)
grid = transit(grid, 6, [2, 11, 10, 12, 14], [0.2947833488050962, 0.24653842946147755, 0.056430951653760573, 0.27591370979300395, 0.12633356028666176])
grid = transit(grid, 14, [15, 6, 10, 1, 4], [0.29862038166453647, 0.5428073928134148, 0.014780563234397621, 0.035227998434702534, 0.10856366385294847])
grid = transit(grid, 14, [2, 6, 11, 8, 10, 1, 9, 15, 0, 3], [0.017846168297174274, 0.18997482578474587, 0.052430516643417406, 0.16627581534087596, 0.20646923469598763, 0.07460849983657188, 0.11397683084257992, 0.007959736427661804, 0.13847126528042603, 0.031987106850559305])
grid = transit(grid, 8, [5, 0, 9, 8, 12], [0.21077757609009812, 0.10472522141440588, 0.09757114495812617, 0.4109414765508804, 0.17598458098648948])
grid = shift(grid, 9, 7, 5.402059937932693)
grid = smooth_max(grid, 14, 15, 5)
grid = transit(grid, 7, [2, 10, 8, 11, 1, 3, 4, 9, 13, 7, 0, 14], [0.12089083176862622, 0.022139456965271826, 0.08983610373757638, 0.1108881609346465, 0.058781596157633294, 0.011443305052272066, 0.10893121188589984, 0.08070543162777631, 0.043295002056570164, 0.09231658113896535, 0.16394433085090826, 0.09682798782385384])
grid = transit(grid, 14, [1, 6, 2], [0.17772971069737925, 0.277185217976942, 0.5450850713256787])
grid = transit(grid, 9, [9], [1.0])
grid = sin(grid, 10, 4, 0.18818065368134793, 21.761657940045055)
grid = prod(grid, 0, [15])
grid = transit(grid, 3, [6], [1.0])
grid = smooth_max(grid, 14, 14, 8)
grid = magnitude(grid, 15, [5, 13, 15, 12, 9, 8], 1.792889722997805)
grid = sin(grid, 5, 8, 3.181956967986508, 63.176071618563924)
grid = transit(grid, 1, [12, 7], [0.7842953653341295, 0.21570463466587048])
grid = transit(grid, 5, [0, 8, 14], [0.47374374249373724, 0.15150219583775948, 0.3747540616685032])
grid = power(grid, 8, 14, 0.16404494069503261)
grid = transit(grid, 6, [11, 6, 15, 5, 2, 7], [0.08736328448543931, 0.14808078712928224, 0.07950336430202748, 0.030623765288652696, 0.3292248340938548, 0.3252039647007435])
grid = sin(grid, 13, 12, 0.1629231719389571, 39.0654947224034)
grid = transit(grid, 10, [12], [1.0])
grid = shift(grid, 5, 11, -3.391935159001771)
grid = sin(grid, 9, 2, 3.665048221321972, 34.46191890034035)
grid = shift(grid, 0, 8, 0.4171631534082729)
grid = smooth_max(grid, 9, 3, 11)
grid = sin(grid, 7, 2, 8.785565246742742, -55.55356315807434)
grid = transit(grid, 8, [14, 15, 2, 10, 0], [0.04131986649883284, 0.19137345978292863, 0.3450960607064788, 0.14965484283639907, 0.27255577017536053])
grid = sin(grid, 10, 10, 2.6703298881968243, -80.0275185019353)
grid = sin(grid, 15, 15, 0.022447183922328844, 76.33532666194228)
grid = shift(grid, 10, 9, -3.1771390650172853)
grid = sin(grid, 7, 9, 2.7098498096207084, -9.258793024699827)
grid = sin(grid, 9, 13, 5.22553300524671, 62.733022755022375)
grid = sin(grid, 7, 6, 2.5947795043665205, -30.18303694780367)
grid = power(grid, 9, 2, 0.13607231056190258)
grid = transit(grid, 15, [5, 8], [0.9661737056819611, 0.03382629431803888])
grid = sin(grid, 7, 9, 0.10427523175624762, 79.65293951103126)
grid = smooth_min(grid, 4, 9, 10)
grid = shift(grid, 14, 2, 9.096126726311702)
grid = transit(grid, 11, [7, 6, 15, 10, 11, 9, 1], [0.2738971601134738, 0.03821760244623328, 0.2165229507505823, 0.020963138131439903, 0.27774481686834557, 0.15022687172459123, 0.022427459965333834])
grid = inverse(grid, 13, 9)
grid = transit(grid, 13, [4, 15, 2, 6, 7, 9, 12, 13, 3], [0.11082467512353555, 0.14534246358740746, 0.12889243445588938, 0.06557075916040449, 0.2137438451380492, 0.043468240202906586, 0.17162755887249095, 0.07422728889003562, 0.04630273456928075])
grid = inverse(grid, 2, 10)
grid = smooth_max(grid, 11, 0, 0)
grid = magnitude(grid, 10, [14, 2], 1.5945221871195847)
grid = prod(grid, 11, [14, 8, 9, 7])
grid = prod(grid, 6, [9, 6, 13])
grid = transit(grid, 6, [5, 15, 2], [0.2997042950790952, 0.4540655621614966, 0.24623014275940822])
grid = sin(grid, 12, 15, 8.058762544873499, 41.43203946411896)
grid = shift(grid, 9, 3, -0.7790490176752418)
grid = smooth_max(grid, 0, 9, 12)
grid = sin(grid, 14, 8, 0.31501336825823245, 77.69981682576937)
grid = transit(grid, 12, [11, 9, 7, 5, 10, 8, 6], [0.035434300039965574, 0.0524843656078373, 0.11561091451260465, 0.1019577819756727, 0.0964665519270125, 0.5588007903729807, 0.0392452955639266])
grid = prod(grid, 12, [4, 5, 14, 8, 1, 7, 12, 11, 10])
grid = sin(grid, 8, 3, 4.758445711700172, -97.24833434805878)
grid = sin(grid, 3, 3, 3.3220040037283938, 19.33512501544837)
grid = transit(grid, 6, [9, 1, 0, 14, 5, 3], [0.0885682723596711, 0.2895563522564287, 0.07231838806149106, 0.2014312172722498, 0.14038433595398989, 0.2077414340961695])
grid = shift(grid, 13, 10, 1.9300363234658817)
grid = magnitude(grid, 14, [11, 15, 9, 8], 2.153506629139895)
grid = transit(grid, 1, [15, 8, 6, 11, 2], [0.2218769845142342, 0.1570361352625215, 0.35227385072229317, 0.14711077434763237, 0.1217022551533187])
grid = transit(grid, 8, [3, 13, 7, 5, 9], [0.38793425061073644, 0.07280704517357459, 0.36598914315829406, 0.09608663818526961, 0.07718292287212522])
grid = smooth_min(grid, 6, 5, 12)
grid = shift(grid, 4, 12, -0.39309542022877897)
grid = transit(grid, 12, [12, 4, 14, 9], [0.38804649244558365, 0.21320656383302775, 0.05172754740962521, 0.34701939631176343])
grid = transit(grid, 8, [9], [1.0])
grid = sin(grid, 10, 3, 0.0900408627285922, -98.66069884304784)
grid = shift(grid, 8, 0, -2.3398670318281614)
grid = sin(grid, 12, 4, 6.820364168141086, 45.084530864366)
grid = sin(grid, 0, 1, 8.29716953281332, 17.6311957451031)
grid = transit(grid, 7, [4, 2], [0.907590991688323, 0.0924090083116769])
grid = power(grid, 2, 3, 0.040036644136999394)
grid = sin(grid, 6, 9, 4.268465724673355, 49.64549721454043)
grid = sin(grid, 8, 5, 5.495021292402201, 69.49592913002365)
grid = magnitude(grid, 4, [8, 12, 7, 9], 2.5717670148746317)
grid = magnitude(grid, 13, [10], 1.921253152641016)
grid = sin(grid, 4, 1, 1.9845043644235563, 92.91913628444635)
grid = smooth_min(grid, 8, 11, 0)
grid = power(grid, 10, 3, 0.09870713631737736)
grid = prod(grid, 5, [12, 2, 13, 6, 0, 11, 10, 7, 3])
grid = transit(grid, 11, [3, 15, 11, 7, 8, 12], [0.12322593462988857, 0.3326579942404951, 0.2546734612650758, 0.05572212462422445, 0.10983688447336877, 0.12388360076694727])
grid = shift(grid, 11, 12, 0.2801154434596038)
grid = shift(grid, 3, 11, -2.372673883012413)
grid = magnitude(grid, 11, [7, 8, 13, 12, 15, 5], 1.626301024321876)
grid = sin(grid, 10, 12, 1.3481539111124006, 32.98965042006074)
grid = shift(grid, 10, 1, -3.9953347909329064)
grid = power(grid, 0, 4, 3.3804467916257828)
grid = sin(grid, 0, 9, 4.496250544332018, 96.42221280271247)
grid = sin(grid, 0, 0, 3.651106086682474, -3.9645570515107806)
grid = magnitude(grid, 1, [11, 5, 12, 7], 2.686553803041045)
grid = prod(grid, 2, [9])
grid = transit(grid, 5, [8, 5, 14, 9, 7, 2, 6, 13, 3, 4, 0, 15], [0.07625867948236753, 0.04130209856128112, 0.13362694269955988, 0.025050783443217976, 0.04875220622948985, 0.2043612167360469, 0.10377783448758206, 0.154896014844895, 0.0894749776842453, 0.07116516668519986, 0.018697242033218413, 0.032636837112896125])
grid = magnitude(grid, 7, [5, 6, 9], 1.490147165320879)
grid = prod(grid, 10, [15, 0, 3, 11])
grid = sin(grid, 5, 13, 4.296486237795199, -99.97383325975011)
grid = transit(grid, 15, [9, 11, 8, 15, 6, 12, 4, 7], [0.0078024435521024905, 0.09854834084153775, 0.11102660642055165, 0.1300401135381463, 0.12213491916855937, 0.060080248334054065, 0.24262900609625124, 0.22773832204879704])
grid = transit(grid, 4, [2, 14, 4], [0.13309416248733422, 0.4191350591778206, 0.4477707783348452])
grid = transit(grid, 15, [12, 5, 6, 13, 10], [0.023179180758127187, 0.36564151871473966, 0.1969405082242702, 0.12869549636480498, 0.28554329593805783])
grid = shift(grid, 7, 4, 1.6929657561885127)
grid = power(grid, 7, 9, 0.25199668245415197)
grid = prod(grid, 11, [0, 2, 7, 11])
grid = sin(grid, 13, 2, 1.3416759192230878, -6.693679880395109)
grid = power(grid, 3, 1, 0.8635932536926462)
grid = sin(grid, 3, 7, 5.266000630938631, 57.3049794938039)
grid = sin(grid, 10, 6, 0.02467391966640155, 26.357742661428162)
grid = shift(grid, 14, 4, 4.526900425982847)
grid = transit(grid, 13, [8, 9, 1, 10, 11, 6, 4], [0.13775580610633353, 0.17184281842075796, 0.1385819751355836, 0.07198023117768185, 0.26020835607057463, 0.19040742506597425, 0.029223388023094293])
grid = transit(grid, 6, [15, 14, 11, 7, 5], [0.04934605155985554, 0.05945383622116262, 0.7689593798762752, 0.05490331280227316, 0.06733741954043339])
grid = smooth_min(grid, 13, 3, 12)
grid = magnitude(grid, 10, [2, 1, 4, 15, 5, 12, 7, 0, 8, 9, 13, 10, 6], 2.355462744510269)
grid = magnitude(grid, 1, [6, 12, 5, 3, 13], 2.1913787665086657)
grid = transit(grid, 2, [14], [1.0])
grid = transit(grid, 8, [0, 14, 6, 15, 12, 3, 11, 10], [0.2897465808953649, 0.05704307960484046, 0.03094202464783303, 0.14060147724188843, 0.04185402740571017, 0.21454092806671682, 0.18662166695948174, 0.038650215178164415])
grid = smooth_min(grid, 7, 9, 6)
grid = magnitude(grid, 12, [11, 0], 2.2298811420717293)
grid = prod(grid, 10, [14, 2, 9, 7, 4, 1, 12])
grid = shift(grid, 4, 13, -3.803342754840501)
grid = transit(grid, 15, [4, 12], [0.6058628819874585, 0.3941371180125415])
grid = power(grid, 3, 2, 0.28257309889000365)
grid = transit(grid, 0, [14, 9, 13, 4, 3, 7, 15, 5], [0.11535095599255255, 0.0026127779957240286, 0.26822253726640444, 0.07302549463266578, 0.1434517614698029, 0.19139513696626387, 0.20398134540873133, 0.0019599902678552276])
grid = power(grid, 2, 8, 1.5252460530663583)
grid = smooth_max(grid, 14, 5, 13)
grid = smooth_max(grid, 11, 15, 2)
grid = sin(grid, 14, 2, 3.437025817606192, -18.865413182072956)
grid = power(grid, 0, 1, 0.7216627941489886)
grid = shift(grid, 1, 1, 0.07357126805445867)
grid = sin(grid, 0, 15, 5.273702043558656, 10.519609949643822)
grid = smooth_min(grid, 1, 1, 0)
grid = sin(grid, 9, 2, 3.9457873133149195, -93.51016673353503)
grid = sin(grid, 10, 3, 9.13725293779146, 18.01978094053834)
grid = transit(grid, 6, [3], [1.0])
grid = shift(grid, 6, 7, 1.496756309043792)
grid = transit(grid, 1, [8, 3, 2, 7], [0.14798751686647468, 0.17526278877927143, 0.008664224135298226, 0.6680854702189556])
grid = smooth_max(grid, 5, 10, 3)
grid = shift(grid, 0, 4, -3.7322607701821764)
grid = sin(grid, 8, 4, 4.548887519558936, -8.336635769657505)
grid = magnitude(grid, 0, [13, 4, 9, 3, 15, 11, 12, 0], 0.7073048728380951)
grid = transit(grid, 10, [2, 10], [0.11055129707754521, 0.8894487029224548])
grid = magnitude(grid, 10, [14], 1.2359188392834954)
grid = magnitude(grid, 8, [14, 2, 0, 9, 3, 1, 10], 2.1407501469189234)
grid = prod(grid, 14, [5, 3, 1, 4])
grid = sin(grid, 13, 4, 7.548998987741023, 91.80083304048807)
grid = magnitude(grid, 8, [1, 13], 3.022900509766653)
grid = smooth_max(grid, 11, 2, 6)
grid = inverse(grid, 9, 7)
grid = sin(grid, 4, 5, 5.654939856815545, -45.298865285238364)
grid = transit(grid, 2, [6, 1, 14], [0.036548613512995536, 0.7575551033461213, 0.2058962831408832])
grid = sin(grid, 4, 6, 4.321593527848581, 31.36105551477283)
grid = prod(grid, 13, [12, 5, 15, 9, 14])
grid = prod(grid, 15, [7, 5])
grid = magnitude(grid, 14, [13, 9], 3.4341332777567954)
grid = inverse(grid, 2, 5)
grid = transit(grid, 9, [12], [1.0])
grid = sin(grid, 10, 3, 5.334771422941683, 76.89565193690669)
grid = transit(grid, 10, [14], [1.0])
grid = transit(grid, 2, [3], [1.0])
grid = transit(grid, 4, [2, 0], [0.9309789937347878, 0.06902100626521222])
grid = sin(grid, 13, 3, 3.315915791292964, 3.9243637308489383)
grid = sin(grid, 3, 2, 5.3035276606576485, 23.01179855293381)
grid = power(grid, 9, 13, 1.5607225957983168)
grid = magnitude(grid, 5, [8, 5], 2.8088849324888505)
grid = sin(grid, 9, 11, 5.842682415118376, 64.39885239180074)
grid = transit(grid, 10, [10, 3], [0.5603119324495553, 0.4396880675504447])
grid = prod(grid, 15, [14, 12])
grid = transit(grid, 14, [13, 2, 0, 4, 10, 8, 6, 5], [0.26169337494633554, 0.23793420483082625, 0.04614407833329057, 0.04236403487215766, 0.10642009219640658, 0.23458562865906674, 0.0332768136314078, 0.03758177253050893])
grid = magnitude(grid, 5, [6, 10, 12, 15], 1.3572972489607062)
grid = sin(grid, 5, 2, 5.1093038197398375, 53.9381278568282)
grid = transit(grid, 8, [9, 8, 1, 6, 12, 11], [0.03880996780762774, 0.14382752817422198, 0.5597195669801879, 0.0045194607868106395, 0.24746148687227199, 0.005661989378879991])
grid = transit(grid, 5, [7, 6], [0.8103675642862215, 0.18963243571377864])
grid = sin(grid, 6, 3, 6.235957918280383, -47.451166140553184)
grid = shift(grid, 1, 13, -0.02459445354150632)
grid = sin(grid, 3, 0, 2.038768947314502, 51.883881557081736)
grid = transit(grid, 11, [2, 15, 8], [0.2014463918756017, 0.33551821756272526, 0.463035390561673])
grid = magnitude(grid, 13, [7, 3, 14, 13, 0], 3.2087159931196614)
grid = sin(grid, 15, 6, 2.4085137869163313, 7.287084454097453)
grid = sin(grid, 14, 12, 1.5483962460548968, 13.513892104408384)
grid = magnitude(grid, 15, [10, 15, 13, 2, 8, 6, 1, 7, 12, 11], 1.2540399715496453)
grid = magnitude(grid, 12, [11, 5, 6, 14, 2, 9, 7, 10], 2.1087787334166848)
grid = sin(grid, 4, 0, 6.164146421770624, 13.569414523695528)
grid = shift(grid, 5, 14, -0.5206746483039376)
grid = power(grid, 3, 8, 0.17855094830170212)
grid = sin(grid, 10, 14, 4.2527453088054, 28.72862044572591)
grid = sin(grid, 1, 14, 9.165209208214423, 85.15376263299333)
grid = sin(grid, 5, 7, 1.6994764773495907, 9.962335708717134)

#create color space 
def shift_colors(x, shift): 
   res = x.copy() 
   for i in range(x.shape[-1]): 
       shift[i] = -shift[i] 
       if shift[i] > 0: res[:,:,i] = (-np.abs(((x[:,:,i] + 1) / 2) ** (1 + shift[i]) - 1) ** (1 / (1 + shift[i])) + 1) * 2 - 1 
       if shift[i] < 0: res[:,:,i] = np.abs((1 - (x [:,:,i]+ 1) / 2) ** (1 - shift[i]) - 1) ** (1 / (1 - shift[i])) * 2 - 1   
   return test_values(res) 

res = np.zeros((SIZE, SIZE, 3)) 
res += shift_colors(grid[:,:,0:1].repeat(3, -1), [2.3278310291184616, 4.623328647104563, 2.045842446768605]) 

res = res / 1 
res = ((res + 1) / 2) ** 2.5 
res = (res * 255).clip(0,255) 

#save results  
im = Image.fromarray(np.uint8(res)) 
im.save(os.path.basename(__file__) + '.png') 

#save layers 
img = np.zeros((SIZE * 4, SIZE * 4)) 
for j in range(GRID_CHANNELS): 
    x = j % 4 
    y = j // 4 
    img[x*SIZE:(x + 1)*SIZE, y*SIZE:(y+1)*SIZE] = grid[:,:,j] 

img = (img + 1) * 127.5  
im = Image.fromarray(np.uint8(img)) 
im.save(os.path.basename(__file__) + '_layers.png') 
